{"version":3,"sources":["context/AppContext.js","components/AlbumList.js","components/PostList.js","components/AppProvider.js","components/Home.js","components/Login.js","components/Navigation.js","components/PostDetails.js","components/AlbumDetails.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","albums","posts","sortConfig","sortConfigPost","sortConfigAlbums","sortList","list","sortedField","AlbumList","useContext","className","ListGroup","Button","onClick","slice","length","map","album","ListGroupItem","style","marginRight","title","to","id","color","width","backgroundColor","PostList","post","AppProvider","children","useState","setAlbums","setPosts","setSortConfig","setSortConfigPost","setSortConfigAlbums","useEffect","a","fetch","json","fetchPosts","fetchAlbums","Provider","value","type","sortedList","sort","b","Home","Login","Form","FormGroup","Label","Input","placeholder","Navigation","Navbar","background","Container","NavbarBrand","Media","object","src","Nav","NavItem","PostDetails","props","body","userId","selectedPost","setSelectedPost","history","useHistory","postId","match","params","fetchPost","onSubmit","e","preventDefault","push","AlbumDetails","albumId","url","thumbnailUrl","selectedAlbum","setSelectedAlbum","console","log","photo","left","middle","href","App","maxWidth","margin","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAWeA,EATIC,IAAMC,cAAc,CACrCC,OAAQ,GACRC,MAAO,GACPC,WAAY,GACZC,eAAgB,GAChBC,iBAAkB,GAClBC,SAAU,SAACC,EAAMC,O,OCHNC,EAAY,WAAO,IAAD,EACkBC,qBAAWZ,GAAlDG,EADqB,EACrBA,OAAQK,EADa,EACbA,SAAUD,EADG,EACHA,iBAE1B,OACE,qCACE,oBAAIM,UAAU,OAAd,yBACA,eAACC,EAAA,EAAD,CAAWD,UAAU,OAArB,UACE,cAACE,EAAA,EAAD,CACEC,QAAS,kBAAMR,EAASL,EAAOc,MAAM,EAAG,GAAI,WAD9C,4BAEcV,KACbJ,EAAOe,OAAS,EACf,mCACGf,EAAOc,MAAM,EAAG,GAAGE,KAAI,SAACC,GAAD,OACtB,eAACC,EAAA,EAAD,CAAeR,UAAU,SAAzB,UACE,wBAAQS,MAAO,CAAEC,YAAa,QAA9B,SAAyCH,EAAMI,QAC/C,qBAAKX,UAAU,UAAf,SACE,cAAC,IAAD,CACEY,GAAE,kBAAaL,EAAMM,IACrBC,MAAM,UACNd,UAAU,kBACVS,MAAO,CACLM,MAAO,IACPC,gBAAiB,UACjBF,MAAO,WAPX,sBAHmCP,EAAMM,SAoBjD,oBAAIb,UAAU,cAAd,8BCjCGiB,EAAW,WAAO,IAAD,EACgBlB,qBAAWZ,GAA/CI,EADoB,EACpBA,MAAOE,EADa,EACbA,eAAgBE,EADH,EACGA,SAC/B,OACE,qCACE,oBAAIK,UAAU,OAAd,wBACA,eAACC,EAAA,EAAD,CAAWD,UAAU,OAArB,UACE,cAACE,EAAA,EAAD,CACEC,QAAS,kBAAMR,EAASJ,EAAMa,MAAM,EAAG,GAAI,UAD7C,4BAEcX,KACbF,EAAMc,OAAS,EACd,mCACGd,EAAMa,MAAM,EAAG,GAAGE,KAAI,SAACY,GAAD,OACrB,cADiC,CAChCV,EAAA,EAAD,CAAeR,UAAU,SAAzB,UACE,wBAAQS,MAAO,CAAEC,YAAa,QAA9B,SAAyCQ,EAAKP,QAC9C,qBAAKX,UAAU,UAAf,SACE,cAAC,IAAD,CACEY,GAAE,gBAAWM,EAAKL,IAClBC,MAAM,UACNd,UAAU,kBACVS,MAAO,CAAEM,MAAO,IAAKC,gBAAiB,UAAWF,MAAM,WAJzD,sBAHmCI,EAAKL,SAgBhD,oBAAIb,UAAU,cAAd,6B,yCC6BKmB,EA3DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACRC,mBAAS,IADD,mBAC7B/B,EAD6B,KACrBgC,EADqB,OAEVD,mBAAS,IAFC,mBAE7B9B,EAF6B,KAEtBgC,EAFsB,OAGAF,mBAAS,QAHT,mBAG7B7B,EAH6B,KAGjBgC,EAHiB,OAIQH,mBAAS,QAJjB,mBAI7B5B,EAJ6B,KAIbgC,EAJa,OAKYJ,mBAAS,QALrB,mBAK7B3B,EAL6B,KAKXgC,EALW,KA2CpC,OAdAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACqBC,MAAM,+CAD3B,cACMvC,EADN,gBAEiBA,EAAOwC,OAFxB,OAEExC,EAFF,OAGEgC,EAAUhC,GAHZ,4CADc,kEAMd,4BAAAsC,EAAA,sEACoBC,MAAM,8CAD1B,cACMtC,EADN,gBAEgBA,EAAMuC,OAFtB,OAEEvC,EAFF,OAGEgC,EAAShC,GAHX,4CANc,0DAWdwC,GAXe,WAAD,wBAYdC,KACC,IAED,cAAC,EAAWC,SAAZ,CACEC,MAAO,CACL5C,SACAC,QACAI,SAzCW,SAACC,EAAMuC,GACtB,IAAIC,EAAU,YAAOxC,GACrBwC,EAAWC,MAAK,SAACT,EAAGU,GAClB,OAAIV,EAAEjB,MAAQ2B,EAAE3B,MACQ,QAAfnB,GAAwB,EAAI,EAEjCoC,EAAEjB,MAAQ2B,EAAE3B,MACQ,QAAfnB,EAAuB,GAAK,EAE9B,KAETgC,EAA6B,QAAfhC,EAAuB,OAAS,OACjC,WAAT2C,IACFb,EAAUc,GACVV,EAAyC,QAArBhC,EAA6B,OAAS,QAE/C,UAATyC,IACFZ,EAASa,GACTX,EAAqC,QAAnBhC,EAA2B,OAAS,SAwBpDD,aACAC,iBACAC,oBAPJ,SAUG0B,KCpDMmB,EAAO,WAClB,OACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,U,gCCPKC,EAAQ,WACnB,OACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oBACA,cAACC,EAAA,EAAD,CAAOT,KAAK,OAAOU,YAAY,gBAC/B,cAACF,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,CAAOT,KAAK,OAAOU,YAAY,sBAEjC,cAAC,IAAD,CAAMjC,GAAG,QAAT,SACE,cAACV,EAAA,EAAD,CACEO,MAAO,CACLM,MAAO,IACPC,gBAAiB,UACjBF,MAAO,WAJX,0B,gDCHKgC,EAAa,WACxB,OACE,cAACC,EAAA,EAAD,CAAQtC,MAAO,CAAEuC,WAAY,WAA7B,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAMrC,GAAG,IAAT,SACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1C,MAAO,CAAEM,MAAO,KAChBqC,QAAM,EACNC,IAAG,wIAIT,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAEE,cAAC,IAAD,CACEvD,UAAU,kBACVY,GAAG,QACHH,MAAO,CACLM,MAAO,IACPC,gBAAiB,UACjBF,MAAO,WANX,mCCtBC0C,EAAc,SAACC,GAAW,IAAD,EACIpC,mBAAS,CAC/CR,GAAI,EACJF,MAAO,GACP+C,KAAM,GACNC,OAAQ,IAL0B,mBAC7BC,EAD6B,KACfC,EADe,KAO9BC,EAAUC,cACVC,EAASP,EAAMQ,MAAMC,OAAOrD,GAElCc,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACmBC,MAAM,8CAAD,OAC0BmC,IAFlD,cACM9C,EADN,gBAIeA,EAAKY,OAJpB,OAIEZ,EAJF,OAKE2C,EAAgB3C,GALlB,4CADc,uBAAC,WAAD,wBAQdiD,KAEC,IAQH,OACE,eAAC1B,EAAA,EAAD,CAAM2B,SAPS,SAACC,GAChBA,EAAEC,iBAEFR,EAAQS,KAAK,MAIb,UACE,eAAC7B,EAAA,EAAD,WACE,gCACA,uCACA,cAACC,EAAA,EAAD,UAAQiB,EAAajD,WAErB,gCACA,sCACA,cAACgC,EAAA,EAAD,UAAQiB,EAAaF,aAIvB,cAAC,IAAD,CAAM9C,GAAG,QAAQZ,UAAU,WAA3B,sBC1COwE,EAAe,SAACf,GAAW,IAAD,EACKpC,mBAAS,CACjD,CACEoD,QAAS,EACT5D,GAAI,EACJF,MAAO,GACP+D,IAAK,GACLC,aAAc,KAPmB,mBAC9BC,EAD8B,KACfC,EADe,KAU/BJ,EAAUhB,EAAMQ,MAAMC,OAAOrD,GAenC,OAbAc,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACoBC,MAAM,+CAAD,OAC0B4C,EAD1B,YADzB,cACMlE,EADN,gBAIgBA,EAAMuB,OAJtB,OAIEvB,EAJF,OAKEsE,EAAiBtE,GACjBuE,QAAQC,IAAI,gBAAiBH,GAN/B,4CADc,uBAAC,WAAD,wBASdT,KAEC,IAGD,cAAClE,EAAA,EAAD,CAAWD,UAAU,OAArB,SACG4E,EAAcvE,OAAS,EACtB,mCACGuE,EAAcxE,MAAM,EAAG,GAAGE,KAAI,SAAC0E,GAAD,OAC7B,cAACxE,EAAA,EAAD,CAAeR,UAAU,SAAzB,SACE,cAACmD,EAAA,EAAD,CAAO8B,MAAI,EAACC,QAAM,EAACC,KAAK,IAAxB,SACE,cAAChC,EAAA,EAAD,CACEC,QAAM,EACNC,IAAG,UAAK2B,EAAMN,IAAX,aAJ8BM,EAAMnE,SAWjD,oBAAIb,UAAU,cAAd,0B,MCnBOoF,MAjBf,WACE,OACE,qBAAK3E,MAAO,CAAE4E,SAAU,QAASC,OAAQ,aAAzC,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,KAAK,oBAAoBC,UAAWhD,IAC3C,cAAC,IAAD,CAAO+C,KAAK,QAAQC,UAAWjD,IAC/B,cAAC,IAAD,CAAOgD,KAAK,YAAYC,UAAWhC,IACnC,cAAC,IAAD,CAAO+B,KAAK,cAAcC,UAAWhB,aCNhCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0ad558ba.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext({\n  albums: [],\n  posts: [],\n  sortConfig: \"\",\n  sortConfigPost: \"\",\n  sortConfigAlbums: \"\",\n  sortList: (list, sortedField) => {},\n});\n\nexport default AppContext;\n\n// Define context that is going to be used by application. Can be splited in multiple contexts such as albumsContext, postsContext...\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport AppContext from \"../context/AppContext\";\n\nexport const AlbumList = () => {\n  const { albums, sortList, sortConfigAlbums } = useContext(AppContext);\n\n  return (\n    <>\n      <h1 className=\"mt-3\">Albums List</h1>\n      <ListGroup className=\"mt-1\">\n        <Button\n          onClick={() => sortList(albums.slice(0, 5), \"albums\")}\n        >{`Sorting: ${sortConfigAlbums}`}</Button>\n        {albums.length > 0 ? (\n          <>\n            {albums.slice(0, 5).map((album) => (\n              <ListGroupItem className=\"d-flex\" key={album.id}>\n                <strong style={{ marginRight: \"auto\" }}>{album.title}</strong>\n                <div className=\"ml-auto\">\n                  <Link\n                    to={`/albums/${album.id}`}\n                    color=\"warning\"\n                    className=\"btn btn-warning\"\n                    style={{\n                      width: 250,\n                      backgroundColor: \"#f9423a\",\n                      color: \"#ffffff\",\n                    }}\n                  >\n                    View\n                  </Link>\n                </div>\n              </ListGroupItem>\n            ))}\n          </>\n        ) : (\n          <h4 className=\"text-center\">No Albums</h4>\n        )}\n      </ListGroup>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport AppContext from \"../context/AppContext\";\n\nexport const PostList = () => {\n  const { posts, sortConfigPost, sortList } = useContext(AppContext);\n  return (\n    <>\n      <h1 className=\"mt-3\">Posts List</h1>\n      <ListGroup className=\"mt-1\">\n        <Button\n          onClick={() => sortList(posts.slice(0, 5), \"posts\")}\n        >{`Sorting: ${sortConfigPost}`}</Button>\n        {posts.length > 0 ? (\n          <>\n            {posts.slice(0, 5).map((post) => ( // Limiting the size of list here. Add pagination for improvment \n              <ListGroupItem className=\"d-flex\" key={post.id}>\n                <strong style={{ marginRight: \"auto\" }}>{post.title}</strong>\n                <div className=\"ml-auto\">\n                  <Link\n                    to={`/post/${post.id}`}\n                    color=\"warning\"\n                    className=\"btn btn-warning\"\n                    style={{ width: 250, backgroundColor: \"#f9423a\", color:\"#ffffff\" }}\n                  >\n                    Edit\n                  </Link>\n                </div>\n              </ListGroupItem>\n            ))}\n          </>\n        ) : (\n          <h4 className=\"text-center\">No Posts</h4>\n        )}\n      </ListGroup>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport AppContext from \"../context/AppContext\";\n\nconst AppProvider = ({ children }) => {\n  const [albums, setAlbums] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [sortConfig, setSortConfig] = useState(\"desc\");\n  const [sortConfigPost, setSortConfigPost] = useState(\"desc\");\n  const [sortConfigAlbums, setSortConfigAlbums] = useState(\"desc\");\n\n  const sortList = (list, type) => {\n    let sortedList = [...list];\n    sortedList.sort((a, b) => {\n      if (a.title < b.title) {\n        return sortConfig === \"asc\" ? -1 : 1;\n      }\n      if (a.title > b.title) {\n        return sortConfig === \"asc\" ? 1 : -1;\n      }\n      return 0;\n    });\n    setSortConfig(sortConfig === \"asc\" ? \"desc\" : \"asc\");\n    if (type === \"albums\") {\n      setAlbums(sortedList);\n      setSortConfigAlbums(sortConfigAlbums === \"asc\" ? \"desc\" : \"asc\");\n    }\n    if (type === \"posts\") {\n      setPosts(sortedList);\n      setSortConfigPost(sortConfigPost === \"asc\" ? \"desc\" : \"asc\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchAlbums() {\n      let albums = await fetch(\"https://jsonplaceholder.typicode.com/albums\");\n      albums = await albums.json();\n      setAlbums(albums);\n    }\n    async function fetchPosts() {\n      let posts = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      posts = await posts.json();\n      setPosts(posts);\n    }\n    fetchPosts();\n    fetchAlbums();\n  }, []);\n  return (\n    <AppContext.Provider\n      value={{\n        albums,\n        posts,\n        sortList,\n        sortConfig,\n        sortConfigPost,\n        sortConfigAlbums,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n","import React from \"react\";\nimport { AlbumList } from \"./AlbumList\";\nimport { PostList } from \"./PostList\";\nimport AppProvider from \"./AppProvider\";\n\nexport const Home = () => {\n  return (\n    <div>\n      <AppProvider>\n        <AlbumList />\n        <PostList />\n      </AppProvider>\n    </div>\n  );\n};\n","import { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const Login = () => {\n  return (\n    <Form>\n      <FormGroup>\n        <Label>Email</Label>\n        <Input type=\"text\" placeholder=\"Enter Email\"></Input>\n        <Label>Password</Label>\n        <Input type=\"text\" placeholder=\"Enter Password\"></Input>\n      </FormGroup>\n      <Link to=\"/home\">\n        <Button\n          style={{\n            width: 250,\n            backgroundColor: \"#f9423a\",\n            color: \"#ffffff\",\n          }}\n        >\n          Submit\n        </Button>\n      </Link>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Container,\n  NavItem,\n  Nav,\n  Media,\n} from \"reactstrap\";\nexport const Navigation = () => {\n  return (\n    <Navbar style={{ background: \"#f8cd46\" }}>\n      <Container>\n        <Link to=\"/\">\n          <NavbarBrand>\n            <Media\n              style={{ width: 200 }}\n              object\n              src={`https://s2-recruiting.cdn.greenhouse.io/external_greenhouse_job_boards/logos/400/181/100/original/LOGO_23_07_2018_0003_GROS.png`}\n            />\n          </NavbarBrand>\n        </Link>\n        <Nav>\n          <NavItem>\n            {/* hide it according to current page, no need to show it at Home */}\n            <Link\n              className=\"btn btn-primary\"\n              to=\"/home\"\n              style={{\n                width: 250,\n                backgroundColor: \"#f9423a\",\n                color: \"#ffffff\",\n              }}\n            >\n              Return Home\n            </Link>\n          </NavItem>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, Label } from \"reactstrap\";\n\nexport const PostDetails = (props) => {\n  const [selectedPost, setSelectedPost] = useState({\n    id: 0,\n    title: \"\",\n    body: \"\",\n    userId: 0,\n  });\n  const history = useHistory();\n  const postId = props.match.params.id;\n\n  useEffect(() => {\n    async function fetchPost() {\n      let post = await fetch(\n        `https://jsonplaceholder.typicode.com/posts/${postId}`\n      );\n      post = await post.json();\n      setSelectedPost(post);\n    }\n    fetchPost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // Add the edit functionality, do a PUT call to api with form data\n    history.push(\"/\");\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <FormGroup>\n        <div>\n        <h3>Title</h3>\n        <Label>{selectedPost.title}</Label>\n        </div>\n        <div>\n        <h3>Body</h3>\n        <Label>{selectedPost.body}</Label>\n        </div>\n      </FormGroup>\n      {/* <Button type=\"submit\">Edit Post</Button> */}\n      <Link to=\"/home\" className=\"btn ml-2\">\n        Back\n      </Link>\n    </Form>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ListGroup, ListGroupItem, Media } from \"reactstrap\";\n\nexport const AlbumDetails = (props) => {\n  const [selectedAlbum, setSelectedAlbum] = useState([\n    {\n      albumId: 0,\n      id: 0,\n      title: \"\",\n      url: \"\",\n      thumbnailUrl: 0,\n    },\n  ]);\n  const albumId = props.match.params.id;\n\n  useEffect(() => {\n    async function fetchPost() {\n      let album = await fetch(\n        `https://jsonplaceholder.typicode.com/albums/${albumId}/photos`\n      );\n      album = await album.json();\n      setSelectedAlbum(album);\n      console.log(\"selectedAlbum\", selectedAlbum)\n    }\n    fetchPost();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ListGroup className=\"mt-4\">\n      {selectedAlbum.length > 0 ? (\n        <>\n          {selectedAlbum.slice(0, 5).map((photo) => (\n            <ListGroupItem className=\"d-flex\" key={photo.id}>\n              <Media left middle href=\"#\">\n                <Media\n                  object\n                  src={`${photo.url}.jpg`}\n                />\n              </Media>\n            </ListGroupItem>\n          ))}\n        </>\n      ) : (\n        <h4 className=\"text-center\">No Photos</h4>\n      )}\n    </ListGroup>\n  );\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./components/Home\";\nimport { Login } from \"./components/Login\";\nimport { Navigation } from \"./components/Navigation\";\nimport { PostDetails } from \"./components/PostDetails\";\nimport { AlbumDetails } from \"./components/AlbumDetails\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div style={{ maxWidth: \"50rem\", margin: \"4rem auto\" }}>\n      <Router>\n        <Navigation />\n        <Switch> \n          {/* Add more Routes here if needed */}\n          <Route path=\"/albums-and-posts\" component={Login} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/post/:id\" component={PostDetails} />\n          <Route path=\"/albums/:id\" component={AlbumDetails} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}